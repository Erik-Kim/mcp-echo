name: PR Comment Response

on:
  issue_comment:
    types: 
      - created
      - edited

jobs:
  respond-to-comment:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      issues: write
    
    steps:
      - name: Check if comment is on PR
        if: contains(github.event.comment.html_url, '/pull/')
        run: |
          echo "Comment is on PR"
          
      - name: Get PR number
        id: pr
        run: |
          PR_NUMBER=$(echo ${{ github.event.issue.number }})
          echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
          
      - name: Check comment content
        id: comment
        run: |
          if contains(github.event.comment.body, '/deploy'); then
            echo "action=deploy" >> $GITHUB_OUTPUT
          elif contains(github.event.comment.body, '/info'); then
            echo "action=info" >> $GITHUB_OUTPUT
          fi
          
      - name: Respond to deploy request
        if: steps.comment.outputs.action == 'deploy'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: ${{ steps.pr.outputs.pr_number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '배포를 요청했습니다. 완료했습니다.'
            })
            
      - name: Respond to info request
        if: steps.comment.outputs.action == 'info'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: ${{ steps.pr.outputs.pr_number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '정보를 요청했습니다. 완료했습니다.'
            })
            
      - name: Add initial comment
        if: github.event.action == 'opened'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: ${{ steps.pr.outputs.pr_number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '배포를 원하시면 /deploy 정보를 원하시면 /info를 입력해 주세요.'
            }) 