name: Test Comment

on:
  pull_request:
    types:
      - opened
  issue_comment:
    types:
      - created
      - edited

permissions:
  pull-requests: write
  issues: write
  contents: read

jobs:
  notify:
    name: Notify 
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Add notification comment
        uses: actions/github-script@v7
        with:
          script: |
            try {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: '배포를 원하시면 `/deploy`를 입력해주세요. 정보를 원하시면 `/info`를 입력해주세요.'
              });
            } catch (error) {
              console.error('Error creating comment:', error);
              process.exit(1);
            }

  job01:
    name: Process Comment
    if: github.event_name == 'issue_comment'
    runs-on: ubuntu-latest
    steps:
      - name: Check if PR comment
        id: check-pr
        run: |
          if [[ "${{ github.event.comment.html_url }}" == *"/pull/"* ]]; then
            echo "is_pr=true" >> $GITHUB_OUTPUT
          else
            echo "is_pr=false" >> $GITHUB_OUTPUT
          fi

      - name: Process deploy command
        if: steps.check-pr.outputs.is_pr == 'true' && contains(github.event.comment.body, '/deploy')
        uses: actions/github-script@v7
        with:
          script: |
            console.log('Comment body:', context.payload.comment.body);
            try {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: 'deploy가 입력되었습니다.'
              });
            } catch (error) {
              console.error('Error creating comment:', error);
              process.exit(1);
            }

      - name: Process info command
        if: steps.check-pr.outputs.is_pr == 'true' && contains(github.event.comment.body, '/info')
        uses: actions/github-script@v7
        with:
          script: |
            console.log('Comment body:', context.payload.comment.body);
            try {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: 'info가 입력되었습니다.'
              });
            } catch (error) {
              console.error('Error creating comment:', error);
              process.exit(1);
            }